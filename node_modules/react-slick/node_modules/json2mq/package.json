{
  "name": "json2mq",
  "version": "0.2.0",
  "description": "Generate media query string from JSON or javascript object",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/.bin/mocha test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/akiran/json2mq"
  },
  "author": {
    "name": "Kiran Abburi"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/akiran/json2mq/issues"
  },
  "homepage": "https://github.com/akiran/json2mq",
  "devDependencies": {
    "mocha": "^2.0.1",
    "should": "^4.3.0"
  },
  "dependencies": {
    "string-convert": "^0.2.0"
  },
  "readme": "# json2mq\n\njson2mq is used to generate media query string from JSON or javascript object.\n\n## Install\n    npm install json2mq\n    \n## Usage\n```javascript\nvar json2mq = require('json2mq');\njson2mq({minWidth: 100, maxWidth: 200});\n// -> '(min-width: 100px) and (max-width: 200px)'\n```\n* Media type \n```javascript\njson2mq({screen: true});  // -> 'screen'\n```\n* Media type with negation \n```javascript\njson2mq({handheld: false});  // -> 'not handheld'\n```\n\n* Media features can be specified in camel case\n```javascript\njson2mq({minWidth: 100, maxWidth: 200});\n// -> '(min-width: 100px) and (max-width: 200px)'\n```\n* px is added to numeric dimension values\n```javascript\njson2mq({minWidth: 100, maxWidth: '20em'});\n// -> '(min-width: 100px) and (max-width: 20em)'\n```\n* Multiple media queries can be passed as an array\n```javascript\njson2mq([{screen: true, minWidth: 100}, {handheld: true, orientation: 'landscape'}]); \n// -> 'screen and (min-width: 100px), handheld and (orientation: landscape)'\n```\n\n\n\n## Contributors\n\n* Eric Schoffstall\n\n",
  "readmeFilename": "README.md",
  "_id": "json2mq@0.2.0",
  "dist": {
    "shasum": "476b17f5c411e9fbee1afc1f8d74ac96ef6aba01"
  },
  "_from": "json2mq@^0.2.0",
  "_resolved": "https://registry.npmjs.org/json2mq/-/json2mq-0.2.0.tgz"
}
