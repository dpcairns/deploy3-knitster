{
  "name": "enquire.js",
  "version": "2.1.1",
  "main": "./dist/enquire.js",
  "description": "Awesome Media Queries in JavaScript",
  "homepage": "http://wicky.nillia.ms/enquire.js",
  "author": {
    "name": "Nick Williams",
    "url": "http://wicky.nillia.ms"
  },
  "keywords": [
    "media query",
    "media queries",
    "matchMedia",
    "enquire",
    "enquire.js"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/WickyNilliams/enquire.js.git"
  },
  "bugs": {
    "url": "https://github.com/WickyNilliams/enquire.js/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    }
  ],
  "scripts": {
    "test": "grunt test --verbose"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-jasmine": "~0.4.1",
    "grunt-contrib-jshint": "~0.3.0",
    "grunt-contrib-uglify": "~0.2.0",
    "grunt-contrib-watch": "~0.3.1",
    "grunt-rigger": "~0.5.0"
  },
  "readme": "#[enquire.js](http://wickynilliams.github.com/enquire.js/) - Awesome Media Queries in JavaScript\n\n[![Build Status](https://travis-ci.org/WickyNilliams/enquire.js.png)](https://travis-ci.org/WickyNilliams/enquire.js)\n\n`enquire.js` is a lightweight, pure javascript library (with **no dependencies**) for programmatically responding to media queries. \n\n##Getting enquire.js\n\n###Download\n\nGet the latest build, ready to go:\n \n * [Development](https://github.com/WickyNilliams/enquire.js/raw/master/dist/enquire.js) - unminified\n * [Production](https://github.com/WickyNilliams/enquire.js/raw/master/dist/enquire.min.js) - minified\n\n###Install via Bower\n\nTo install via the [bower](http://twitter.github.com/bower/) package repository, enter the following at the command line:\n\n    bower install enquire\n\nEasy as that :-)\n\n###Build From Source\n\nIf you want build from source (and run all unit tests etc):\n\n    git clone git://github.com/WickyNilliams/enquire.js.git\n    cd enquire.js\n    npm install\n    grunt\n\nBooya!\n\n##Quick Start\n\nThe main method you will be dealing with is `register`. It's basic signature is as follows:\n\n```javascript\nenquire.register(query /* string */, handler /* object || array  || function */);\n```\n\n`query` is the CSS media query you wish to respond to, and `handler` is an object containing any logic to handle the query. An example of usage is as follows:\n\n```javascript\nenquire.register(\"screen and (max-width:1000px)\", {\n\n    match : function() {},      // OPTIONAL\n                                // If supplied, triggered when the media query transitions \n                                // *from an unmatched to a matched state*\n\n    unmatch : function() {},    // OPTIONAL\n                                // If supplied, triggered when the media query transitions \n                                // *from a matched state to an unmatched state*.\n                                // Also may be called when handler is unregistered (if destroy is not available)\n\n    setup : function() {},      // OPTIONAL\n                                // If supplied, triggered once immediately upon registration of the handler\n\n    destroy : function() {},    // OPTIONAL\n                                // If supplied, triggered when handler is unregistered. Place cleanup code here\n\n    deferSetup : true           // OPTIONAL, defaults to false\n                                // If set to true, defers execution the setup function \n                                // until the media query is first matched. still triggered just once\n});\n```\n\nThis should be enough to get you going, but **please read the full [enquire.js documentation](http://wickynilliams.github.com/enquire.js/)** if you wish to learn about the other cool features.\n\n##Contributing\n\n* Got an awesome idea? \n* Found a *not-so*-awesome bug? \n* Wish to get my attention through an inappropriate communication channel?!\n\nThen please don't hesitate to raise an issue, they will *all* be looked at and tended to.\n\nAnd for all the cool cats who are prepared to give their time to contribute code, feel free to open a pull request. If you could write unit tests to accompany your pull request that would be pretty sweet, but no worries if not - if it's good enough to be merged in, it's good enough for me to spend a little time to write tests on your behalf :-)\n\n##License\n\nLicense: MIT (http://www.opensource.org/licenses/mit-license.php)\n\n\n",
  "readmeFilename": "readme.md",
  "_id": "enquire.js@2.1.1",
  "dist": {
    "shasum": "927ed95b5a791dcb395d83e7df6794338f51d884"
  },
  "_from": "enquire.js@^2.1.1",
  "_resolved": "https://registry.npmjs.org/enquire.js/-/enquire.js-2.1.1.tgz"
}
